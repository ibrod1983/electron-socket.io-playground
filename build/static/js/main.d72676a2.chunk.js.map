{"version":3,"sources":["MessageSending/SendMessage.js","MessageSending/StringMessage.js","MessageSending/NumberMessage.js","MessageSending/ObjectMessage.js","App.js","ObjectItem.js","Item.js","Items.js","Event.js","RegisteredEvents.js","Header.js","AddEvent.js","serviceWorker.js","index.js"],"names":["styles","theme","root","display","flexWrap","formControl","margin","spacing","unit","minWidth","selectEmpty","marginTop","SendMessage","state","event","message","tab","error","onEventChange","e","target","value","_this","setState","onMessageChange","isObject","evalResult","eval","concat","onSubmit","preventDefault","parseInt","props","handleTabChange","classes","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","autoComplete","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_6___default","label","required","onChange","type","fullWidth","name","variant","_material_ui_core_FormControl__WEBPACK_IMPORTED_MODULE_11___default","_material_ui_core_InputLabel__WEBPACK_IMPORTED_MODULE_8___default","htmlFor","_material_ui_core_Select__WEBPACK_IMPORTED_MODULE_13___default","inputProps","id","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_9___default","_material_ui_core_FormHelperText__WEBPACK_IMPORTED_MODULE_12___default","_StringMessage__WEBPACK_IMPORTED_MODULE_14__","_NumberMessage__WEBPACK_IMPORTED_MODULE_15__","_ObjectMessage__WEBPACK_IMPORTED_MODULE_16__","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_7___default","disabled","connected","color","React","Component","withStyles","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_1___default","StringMessage","multiline","rows","NumberMessage","ObjectMessage","socket","ObjectItem","react_default","Object","keys","object","map","key","Item","Card_default","CardContent_default","style","padding","Typography_default","float","gutterBottom","time","owner","eventName","data","Array","isArray","toString","src_ObjectItem","Items","listStyle","paddingLeft","items","item","index","width","marginBottom","src_Item","chip","Chip_default","icon","Event_default","onDelete","RegisteredEvents","console","log","events","src_Event","onEventDelete","Header","address","defineProperty","onConnectSubmit","onDisconnectSubmit","AppBar_default","position","Toolbar_default","search","searchIcon","CastConnected_default","Search_default","InputBase_default","placeholder","inputRoot","input","inputInput","Button_default","flexGrow","grow","menuButton","marginLeft","marginRight","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","breakpoints","up","height","pointerEvents","alignItems","justifyContent","paddingTop","paddingRight","paddingBottom","transition","transitions","create","AddEvent","TextField_default","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","registeredEvents","registerEvent","on","addItem","objectSpread","uuid","getTime","toConsumableArray","document","querySelector","scrollIntoView","behavior","connect","disconnect","onMessageSubmit","emitEvent","emit","onEventSubmit","off","oldEvents","window","io","length","_arr","_i","reason","unix","getMoment","moment","format","createRef","_this2","setTimeout","src_Header","AddEvent_AddEvent","values","ref","clear","Boolean","location","hostname","match","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d72676a2.chunk.js","sourcesContent":["import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport Select from '@material-ui/core/Select';\r\nimport StringMessage from './StringMessage';\r\nimport NumberMessage from './NumberMessage';\r\nimport ObjectMessage from './ObjectMessage';\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing.unit,\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing.unit * 2,\r\n    },\r\n});\r\n\r\n\r\nclass SendMessage extends React.Component {\r\n    state = {\r\n        event: \"yoyo\",\r\n        message: \"\",\r\n        tab: 'String',\r\n        error: false\r\n    }\r\n\r\n    onEventChange = (e) => {\r\n\r\n        const event = e.target.value;\r\n\r\n        this.setState({ event })\r\n    }\r\n\r\n    onMessageChange = (message) => {        \r\n        let error = false;\r\n        if (this.state.tab === 'Object') {\r\n            const parsedMessage = this.isObject(message);\r\n            if(!parsedMessage){\r\n                error= true;\r\n            }\r\n        }\r\n        this.setState({ message,error });\r\n    }\r\n\r\n    isObject = (value) => {//Returns the parsed object on success, false on failure.\r\n        // debugger;\r\n        let evalResult;\r\n        try {\r\n            eval(`evalResult = ${value}`) // if it doesn't throw it's a valid array or object\r\n            if (typeof evalResult === 'object') {\r\n                return evalResult;\r\n            } else {\r\n                return false;\r\n            }\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        debugger;\r\n        e.preventDefault();\r\n        let value = this.state.message;\r\n        // this.validateInput(value)\r\n        switch (this.state.tab) {\r\n            case 'Number':\r\n                 value = parseInt(value)\r\n                break;\r\n            case 'Object':\r\n                // debugger;\r\n                let evalResult;\r\n                eval(`evalResult = ${value}`);                 \r\n                value = evalResult;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n\r\n        // alert(this.state.address)\r\n        this.props.onSubmit(this.state.event, value);\r\n    }\r\n\r\n    handleTabChange = (e) => {\r\n        this.setState({ tab: e.target.value })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <form className={classes.root} onSubmit={this.onSubmit} autoComplete=\"off\">\r\n                <TextField\r\n                    // id=\"outlined-password-input\"\r\n                    label=\"Event name\"\r\n                    required\r\n                    // className={classes.textField}\r\n                    onChange={this.onEventChange} value={this.state.event}\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    name=\"event\"\r\n\r\n                    // autoComplete=\"current-password\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                />\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel htmlFor=\"age-simple\">Format</InputLabel>\r\n                    <Select\r\n                        value={this.state.tab}\r\n                        onChange={this.handleTabChange}\r\n                        inputProps={{\r\n                            name: 'age',\r\n                            id: 'age-simple',\r\n                        }}\r\n                    >\r\n\r\n                        <MenuItem value={'String'}>String</MenuItem>\r\n                        <MenuItem value={'Number'}>Number</MenuItem>\r\n                        <MenuItem value={'Object'}>Object</MenuItem>\r\n\r\n                    </Select>\r\n                    <FormHelperText>Select the message formatting</FormHelperText>\r\n                </FormControl>\r\n                {this.state.tab === 'String' && <StringMessage onChange={this.onMessageChange} value={this.state.message} />}\r\n\r\n                {this.state.tab === 'Number' && <NumberMessage onChange={this.onMessageChange} value={this.state.message} />}\r\n                {this.state.tab === 'Object' && <ObjectMessage error={this.state.error} onChange={this.onMessageChange} value={this.state.message} />}\r\n\r\n\r\n                <Button disabled={!this.props.connected || this.state.error} type=\"submit\" variant=\"contained\" color=\"primary\" >\r\n                    Send\r\n              </Button>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(SendMessage);\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst StringMessage = (props) => {\r\n    \r\n    return (\r\n        <TextField\r\n            // id=\"outlined-password-input\"\r\n            label=\"Message\"\r\n          \r\n            \r\n            multiline\r\n            rows={10}\r\n            // className={classes.textField}\r\n            onChange={(e)=>{props.onChange(e.target.value)}} value={props.value}\r\n            type=\"text\"\r\n            fullWidth\r\n            name=\"message\"\r\n\r\n            // autoComplete=\"current-password\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default StringMessage;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst NumberMessage = (props) => {\r\n\r\n    \r\n\r\n    return (\r\n        <TextField\r\n            // id=\"outlined-password-input\"\r\n            label=\"Message\"\r\n            required\r\n            // className={classes.textField}\r\n            onChange={(e)=>{props.onChange(e.target.value)}} value={props.value}\r\n            type=\"number\"\r\n            fullWidth\r\n            name=\"message\"\r\n            // autoComplete=\"current-password\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default NumberMessage;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst ObjectMessage = (props) => {\r\n\r\n   \r\n\r\n\r\n    return (\r\n        <TextField\r\n            // id=\"outlined-password-input\"\r\n            label=\"Object message\"\r\n            required\r\n            error={props.error}\r\n            multiline\r\n            rows={10}\r\n            // className={classes.textField}\r\n            onChange={(e)=>{props.onChange(e.target.value)}} value={props.value}\r\n            type=\"text\"\r\n            fullWidth\r\n            name=\"message\"\r\n\r\n            // autoComplete=\"current-password\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default ObjectMessage;","import React, { Component } from 'react';\n// import Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Items from './Items';\nimport RegisteredEvents from './RegisteredEvents';\nimport uuid from 'uuid';\nimport './App.scss';\nimport moment from 'moment';\nimport Header from './Header';\nimport AddEvent from './AddEvent'\nimport SendMessage from './MessageSending/SendMessage'\n\n// import MenuIcon from '@material-ui/icons/Menu';\n\n// import {observer} from 'mobx-react';\n// import state from './state';\nimport io from 'socket.io-client';\nlet socket;\n\n\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.items = React.createRef();\n  }\n\n  state = {\n    address: \"\",\n    eventName: \"\",\n    items: [],\n    tab: 0,\n    registeredEvents: {},\n    connected: false\n  }\n\n\n\n  componentDidMount() {\n    this.addItem('yoyo', \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\", true);\n    setTimeout(() => {\n      this.addItem('welcome', 'heyyyy', false);\n    }, 0)\n    // this.addItem('yoyo','heyyyy',false);\n    // this.addItem('yoyo','heyyyy',false);\n    // \n  }\n\n  registerEvent = (eventName) => {\n    if (socket) {\n      socket.on(eventName, (data) => {\n        this.addItem(eventName, data, false)\n      })\n      this.setState({\n        registeredEvents: { ...this.state.registeredEvents, [eventName]: { name: eventName } }\n      })\n    }\n  }\n\n  addItem = (eventName, data, owner) => {\n    const id = uuid();\n\n    const time = this.getTime();\n\n    this.setState({\n      items: [...this.state.items, {id, eventName, time, data, owner }]\n    })\n\n    document.querySelector('#dummy').scrollIntoView({ behavior: 'smooth' })\n\n  }\n\n\n\n  onConnectSubmit = (address) => {\n    this.connect(address);\n  }\n\n  onDisconnectSubmit = () => {\n    socket.disconnect();\n    this.setState({ connected: false })\n  }\n\n  onMessageSubmit = (eventName, message) => {\n    this.addItem(eventName, message, true);\n    this.emitEvent(eventName, message);\n  }\n\n  emitEvent = (eventName, message) => {\n    socket.emit(eventName, message)\n  }\n\n  onChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      [name]: value\n    })\n  }\n\n\n  onEventSubmit = (eventName) => {\n    console.log(eventName)\n    this.registerEvent(eventName);\n  }\n\n  onEventDelete= (name)=>{\n    // this.setState()\n    // debugger;\n    socket.off(name);\n\n    const oldEvents = {...this.state.registeredEvents};\n    delete oldEvents[name];\n    this.setState({\n      registeredEvents:oldEvents\n    })\n  }\n\n\n  connect = (address) => {\n\n    if (socket) {\n      socket.disconnect();\n    }\n\n    socket = window.socket = io(address);\n\n    socket.on('connect', () => {\n      console.log('connected!')\n      this.setState({\n         connected: true,\n        //  registeredEvents:{}\n         })\n\n      if(Object.keys(this.state.registeredEvents).length > 0 ){\n        console.log('re-registering events');\n        for(let event of Object.keys(this.state.registeredEvents)){\n          this.registerEvent(event);\n        }\n      }   \n      this.registerEvent('welcome')\n      this.registerEvent('welcome2')\n      // this.addItem('yoyo', { name: 'john', age: 35 })\n      // this.addItem('yoyo', ['hey', 'hey again', 3])\n      // this.addItem('yoyo', \"i'm just a simple string!\")\n    });\n\n    socket.on('disconnect', (reason) => {\n      console.log('reason',reason)\n      // if (reason === 'io server disconnect') {\n      //   // the disconnection was initiated by the server, you need to reconnect manually\n      //   socket.connect();\n      // }\n      // else the socket will automatically try to reconnect\n    });\n\n    socket.on('connect_error', (error) => {\n      console.log('Error connecting!')\n    });\n\n    // var onevent = socket.onevent;\n    // socket.onevent = function (packet) {\n    //   var args = packet.data || [];\n    //   onevent.call(this, packet);    // original call\n    //   packet.data = [\"*\"].concat(args);\n    //   onevent.call(this, packet);      // additional call to catch-all\n    // };\n\n    // socket.on('*', (event, data) => {\n    //   console.log(event, data)\n    //   this.addItem(event, data)\n    // })\n\n    // socket.on('reconnecting', (attemptNumber) => {\n    //   // ...\n    //   if(socket){\n\n    //   }\n    // });\n  }\n\n  getTime = () => {\n    // debugger;\n    // console.log('unix',unix)\n    const unix = this.getMoment();\n    return moment(unix * 1000).format('HH:mm');\n  }\n  getMoment = () => {\n    // console.log(moment().unix())\n    return moment().unix();\n\n  }\n\n  handleTabChange = (event, tab) => {\n    this.setState({ tab });\n  };\n\n  render() {\n\n    // console.log(Object.values(this.state.registeredEvents))\n\n    return (\n\n\n\n\n      <div id=\"wrapper\">\n        <Header connected={this.state.connected} onDisconnectSubmit={this.onDisconnectSubmit} onConnectSubmit={this.onConnectSubmit}></Header>\n\n        <div id=\"main\">\n\n          <div className=\"special_scroll\" id=\"panel\">\n\n            <div id=\"send_messages\">  \n              <Typography gutterBottom variant=\"title\">Send messages</Typography>\n              <SendMessage connected={this.state.connected} onSubmit={this.onMessageSubmit}></SendMessage>\n\n            </div>\n\n\n            <div id=\"events\">\n            <Typography gutterBottom variant=\"title\">Register events</Typography>  \n              <AddEvent connected={this.state.connected} onSubmit={this.onEventSubmit}></AddEvent>\n              {Object.keys(this.state.registeredEvents).length > 0 && (\n\n                <div id=\"registered_events\" >\n                  <RegisteredEvents onEventDelete={this.onEventDelete} events={Object.values(this.state.registeredEvents)}></RegisteredEvents>\n                </div>\n\n              )}\n            </div>\n\n\n\n\n\n\n          </div>\n\n          <div className=\"special_scroll\" ref={this.items} id=\"items\">\n         \n            <Typography    variant=\"title\" gutterBottom>\n              Messages sent/received\n            </Typography>\n            <Items items={this.state.items} />\n            <div style={{ float: \"left\", clear: \"both\" }} id=\"dummy\">\n\n            </div>\n          </div>\n\n\n\n\n        </div>\n\n\n\n      </div>\n\n    );\n  }\n}\n\n\n\n\n\n\n\n","import React from 'react';\r\n\r\n\r\n\r\n\r\nconst ObjectItem = (props) => {\r\n    // console.log('props',props)\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div>   \r\n        &#123;\r\n            {Object.keys(props.object).map((key) => {\r\n                return (\r\n\r\n                    <div>\r\n                        <span >{key}: </span><span>{props.object[key]}</span>\r\n\r\n                    </div>\r\n\r\n                )\r\n            })}\r\n\r\n            &#125;\t  \r\n        </div>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default ObjectItem;\r\n\r\n\r\n\r\n","import React from 'react';\r\n// import { observer } from 'mobx-react';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import { withStyles } from '@material-ui/core/styles';\r\nimport ObjectItem from './ObjectItem';\r\n\r\n\r\n\r\nconst getContent = (message) => {\r\n    if (typeof message === 'object' && !Array.isArray(message)) {\r\n        return (\r\n            <div>\r\n\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                    Type: Object\r\n                </Typography>\r\n                <Typography color=\"textPrimary\" gutterBottom>\r\n                   <ObjectItem object={message}></ObjectItem>\r\n                </Typography>\r\n            </div>\r\n\r\n        )\r\n    } else if (Array.isArray(message)) {\r\n        return (\r\n            <div>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                    Type: Array\r\n                </Typography>\r\n                <Typography variant=\"h5\" color=\"textPrimary\" gutterBottom>\r\n\r\n                    [{message.toString()}]\r\n                </Typography>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    else {\r\n        return (\r\n            <div>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                    Type: String\r\n         </Typography>\r\n                <Typography variant=\"h5\" color=\"textPrimary\" gutterBottom>\r\n                    {message}\r\n                </Typography>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst Item = (props) => {\r\n    // console.log('props',props)\r\n\r\n\r\n    return (\r\n\r\n\r\n\r\n        <Card >\r\n            <CardContent style={{padding:'15px'}}>\r\n                <Typography style={{float:'right'}}   color=\"textSecondary\" gutterBottom>\r\n                    {props.time}\r\n                </Typography>\r\n                <Typography  color=\"primary\" gutterBottom>\r\n                    {props.owner ? 'Sent' : 'Received'} event: {props.eventName}\r\n                </Typography>\r\n                {getContent(props.data)}\r\n            </CardContent>\r\n\r\n\r\n           \r\n        </Card>\r\n    )\r\n\r\n    // return (\r\n\r\n\r\n\r\n    //     <div style={{ backgroundColor: '#3f51b5', borderRadius: '10px' }}>\r\n    //         <Typography style={{ color: 'white' }} inline color=\"textSecondary\" gutterBottom>\r\n    //             {props.time}\r\n    //         </Typography>\r\n    //         <Typography style={{ color: 'white' }} color=\"primary\" gutterBottom>\r\n    //             {props.eventName}\r\n    //         </Typography>\r\n\r\n\r\n    //         {getContent(props.data)}\r\n    //     </div>\r\n    // )\r\n\r\n}\r\n\r\nexport default Item;\r\n\r\n\r\n\r\n// export default (props) => {\r\n//     if (typeof props.data === 'object') {\r\n\r\n//         return (\r\n//             <p>\r\n//                 <span style={{ color: 'navy' }}>{props.time}</span>\r\n//                 {Object.keys(props.data).map((key) => {\r\n//                     return (\r\n//                         <p>\r\n\r\n//                             <span onClick={props.onClick}>{key}: </span><span>{props.data[key]}</span>\r\n//                         </p>\r\n//                     )\r\n//                 })}\r\n\r\n//             </p>\r\n//         )\r\n\r\n\r\n//     } else {\r\n//         return (\r\n\r\n//             <p> <span style={{ color: 'navy' }}>{props.time}</span> {props.data}</p>\r\n//         )\r\n//     }\r\n\r\n// }","import React from 'react';\r\nimport Item from './Item';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return (\r\n        <ul style={{ listStyle: 'none', paddingLeft: '0' }}>\r\n\r\n\r\n\r\n\r\n            {props.items.map((item, index) => <li key={item.id} style={{ display: 'block', width: '100%', float: 'left',marginBottom:'15px' }}><div\r\n                style={{\r\n                    // display: 'inline-block',\r\n                    float: item.owner ? 'left' : 'right',\r\n                    width:'40%'\r\n                    \r\n                }}>\r\n                <Item  owner={item.owner} eventName={item.eventName} time={item.time} data={item.data} >\r\n                </Item>\r\n            </div>\r\n            </li>)}\r\n\r\n        </ul>\r\n\r\n    )\r\n\r\n}","import React from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst styles = theme => ({\r\n   \r\n    chip: {\r\n    //   fontSize:'10px'\r\n    },\r\n  });\r\n\r\nconst Event = (props) => {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <Chip\r\n            label={props.name}\r\n          \r\n            className={classes.chip}\r\n            color=\"primary\"\r\n            icon={<EventIcon/>}\r\n            onDelete={props.onDelete}\r\n            variant=\"outlined\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(Event);\r\n","import React from 'react';\r\nimport Event from './Event';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\nconst styles={\r\n    marginBottom:'10px',\r\n    marginTop:'10px'\r\n}\r\n\r\nexport default (props) => {\r\n    console.log('events from props',props.events)\r\n    return(\r\n        <div >\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n        Listening to events:\r\n      </Typography>\r\n            {props.events.map(event=><div style={styles}><Event onDelete={()=>{props.onEventDelete(event.name)}} name={event.name}></Event></div>)}\r\n        </div>\r\n     \r\n    )\r\n\r\n}","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CastConnectedIcon from '@material-ui/icons/CastConnected';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\n\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\n\r\nconst styles = theme => (\r\n    {\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        grow: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginLeft: -12,\r\n            marginRight: 20,\r\n        },\r\n        search: {\r\n            position: 'relative',\r\n            borderRadius: theme.shape.borderRadius,\r\n            backgroundColor: fade(theme.palette.common.white, 0.15),\r\n            '&:hover': {\r\n                backgroundColor: fade(theme.palette.common.white, 0.25),\r\n            },\r\n            marginRight: theme.spacing.unit * 2,\r\n            marginLeft: 0,\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: theme.spacing.unit * 3,\r\n                width: 'auto',\r\n            },\r\n        },\r\n        searchIcon: {\r\n            width: theme.spacing.unit * 9,\r\n            height: '100%',\r\n            position: 'absolute',\r\n            pointerEvents: 'none',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        inputRoot: {\r\n            color: 'inherit',\r\n            width: '100%',\r\n        },\r\n        inputInput: {\r\n           \r\n            \r\n            paddingTop: theme.spacing.unit,\r\n            paddingRight: theme.spacing.unit,\r\n            paddingBottom: theme.spacing.unit,\r\n            paddingLeft: theme.spacing.unit * 10,\r\n            transition: theme.transitions.create('width'),\r\n            width: '100%',\r\n            [theme.breakpoints.up('md')]: {\r\n                width: 200,\r\n            },\r\n        },\r\n    }\r\n);\r\n\r\nclass Header extends React.Component {\r\n\r\n    state = {\r\n        address: \"localhost:3001\"\r\n    }\r\n\r\n    onChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onConnectSubmit = (e) => {\r\n        e.preventDefault();\r\n        // alert(this.state.address)\r\n        this.props.onConnectSubmit(this.state.address);\r\n    }\r\n\r\n    onDisconnectSubmit = (e) => {\r\n        e.preventDefault();\r\n        // alert(this.state.address)\r\n        this.props.onDisconnectSubmit();\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <form autoComplete=\"off\" onSubmit={this.props.connected ? this.onDisconnectSubmit :  this.onConnectSubmit} className={classes.root}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n\r\n                        <div className={classes.search}>\r\n                            <div className={classes.searchIcon}>\r\n                                {this.props.connected ?  <CastConnectedIcon></CastConnectedIcon>: <SearchIcon></SearchIcon> }\r\n                               \r\n                            </div>\r\n                            <InputBase\r\n                                name=\"address\"\r\n                                value={this.state.address}\r\n                                onChange={this.onChange}\r\n                                placeholder=\"localhost:3001\"\r\n                                classes={{\r\n                                    root: classes.inputRoot,\r\n                                    input: classes.inputInput,\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <Button type=\"submit\" color=\"inherit\">{this.props.connected ? 'Disconnect' : 'Connect'}</Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </form>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Header);","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class AddEvent extends React.Component {\r\n    state = {\r\n        event: \"\"\r\n    }\r\n\r\n    onChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        // alert(this.state.address)\r\n        this.props.onSubmit(this.state.event);\r\n    }\r\n\r\n    // render() {\r\n    //     return (\r\n    //         <form onSubmit={this.onSubmit} className=\"form-inline\">\r\n\r\n    //             <div className=\"form-group mx-sm-3 mb-2\">\r\n\r\n    //                 <input onChange={this.onChange} value={this.state.event} type=\"text\" className=\"form-control\" id=\"event\" name=\"event\" placeholder=\"Event name\" />\r\n    //             </div>\r\n    //             <button type=\"submit\" className=\"btn btn-primary mb-2\">Register event</button>\r\n    //         </form>\r\n\r\n    //     )\r\n    // }\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmit} >\r\n                    \r\n                <TextField                  \r\n                    label=\"Event name\"\r\n                    required               \r\n                    onChange={this.onChange} value={this.state.event} \r\n                    type=\"text\"\r\n                    fullWidth\r\n                    name=\"event\"                \r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                />\r\n                <Button disabled={!this.props.connected} type=\"submit\" variant=\"contained\" color=\"primary\" >\r\n                    Register\r\n                </Button>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}