{"version":3,"sources":["MessageSending/SendMessage.js","MessageSending/StringMessage.js","MessageSending/NumberMessage.js","MessageSending/ObjectMessage.js","ObjectItem.js","Item.js","Items.js","Event.js","RegisteredEvents.js","Loader.js","App.js","Header.js","AddEvent.js","serviceWorker.js","index.js"],"names":["styles","theme","root","display","flexWrap","formControl","margin","spacing","unit","minWidth","selectEmpty","marginTop","SendMessage","state","event","message","tab","error","onEventChange","e","target","value","_this","setState","onMessageChange","isObject","evalResult","eval","concat","onSubmit","preventDefault","parseInt","props","handleTabChange","classes","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","autoComplete","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_6___default","label","required","onChange","type","fullWidth","name","variant","_material_ui_core_FormControl__WEBPACK_IMPORTED_MODULE_11___default","_material_ui_core_InputLabel__WEBPACK_IMPORTED_MODULE_8___default","htmlFor","_material_ui_core_Select__WEBPACK_IMPORTED_MODULE_13___default","inputProps","id","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_9___default","_material_ui_core_FormHelperText__WEBPACK_IMPORTED_MODULE_12___default","_StringMessage__WEBPACK_IMPORTED_MODULE_14__","_NumberMessage__WEBPACK_IMPORTED_MODULE_15__","_ObjectMessage__WEBPACK_IMPORTED_MODULE_16__","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_7___default","disabled","connected","color","React","Component","withStyles","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_1___default","StringMessage","multiline","rows","NumberMessage","ObjectMessage","ObjectItem","react_default","Object","keys","object","map","key","Item","console","log","Card_default","CardContent_default","style","padding","Typography_default","float","gutterBottom","time","owner","eventName","data","Array","isArray","toString","src_ObjectItem","PureComponent","Items","listStyle","paddingLeft","items","item","index","width","marginBottom","src_Item","chip","Chip_default","icon","Event_default","onDelete","RegisteredEvents","events","src_Event","onEventDelete","Loader","socket","CircularProgress_default","size","Header","address","defineProperty","connectionStatus","onDisconnectSubmit","onConnectSubmit","renderButton","Button_default","renderStatus","src_Loader","Search_default","CastConnected_default","AppBar_default","position","Toolbar_default","search","searchIcon","InputBase_default","placeholder","inputRoot","input","inputInput","flexGrow","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","marginRight","marginLeft","breakpoints","up","height","pointerEvents","alignItems","justifyContent","paddingTop","paddingRight","paddingBottom","transition","transitions","create","AddEvent","TextField_default","createMuiTheme","primary","blue","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","registeredEvents","anonymousEvents","alertOpen","alertContent","allEventsChecked","addDummyDataForDevelopment","addItem","registerEvent","off","on","objectSpread","registerAnonymousEvent","unregisterAnonymousEvents","hasOwnProperty","uuid","getTime","toConsumableArray","document","querySelector","scrollIntoView","behavior","connect","disconnect","onMessageSubmit","emitEvent","emit","onEventSubmit","oldEvents","window","io","originalOnevent","onevent","reason","attemptNumber","length","_arr","_i","listenToAllEvents","that","assertThisInitialized","packet","eventData","unix","getMoment","moment","format","handleAlertClose","handleAllEventsCheck","checked","createRef","core_styles","src_Header","FormControlLabel_default","control","Checkbox_default","AddEvent_AddEvent","values","ref","clear","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","aria-describedby","action","IconButton_default","aria-label","onClick","Close_default","Boolean","location","hostname","match","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c9c212df.chunk.js","sourcesContent":["import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport Select from '@material-ui/core/Select';\r\nimport StringMessage from './StringMessage';\r\nimport NumberMessage from './NumberMessage';\r\nimport ObjectMessage from './ObjectMessage';\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing.unit,\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing.unit * 2,\r\n    },\r\n});\r\n\r\n\r\nclass SendMessage extends React.Component {\r\n    state = {\r\n        // event: process.env.NODE_ENV ===  'development' ? \"yoyo\" : '',\r\n        event: \"\",\r\n        message: \"\",\r\n        tab: 'String',\r\n        error: false\r\n    }\r\n\r\n    onEventChange = (e) => {\r\n\r\n        const event = e.target.value;\r\n\r\n        this.setState({ event })\r\n    }\r\n\r\n    onMessageChange = (message) => {\r\n        let error = false;\r\n        if (this.state.tab === 'Object') {\r\n            const parsedMessage = this.isObject(message);\r\n            if (!parsedMessage) {\r\n                error = true;\r\n            }\r\n        }\r\n        this.setState({ message, error });\r\n    }\r\n\r\n    isObject = (value) => {//Returns the parsed object on success, false on failure.\r\n        // debugger;\r\n        let evalResult;\r\n        try {\r\n            eval(`evalResult = ${value}`) // if it doesn't throw it's a valid array or object\r\n            if (typeof evalResult === 'object') {\r\n                return evalResult;\r\n            } else {\r\n                return false;\r\n            }\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        // debugger;\r\n        e.preventDefault();\r\n        let value = this.state.message;\r\n        // this.validateInput(value)\r\n        switch (this.state.tab) {\r\n            case 'Number':\r\n                value = parseInt(value)\r\n                break;\r\n            case 'Object':\r\n                // debugger;\r\n                let evalResult;\r\n                eval(`evalResult = ${value}`);\r\n                value = evalResult;\r\n            default:\r\n                break;\r\n        }\r\n\r\n\r\n        // alert(this.state.address)\r\n        this.props.onSubmit(this.state.event, value);\r\n    }\r\n\r\n    handleTabChange = (e) => {\r\n        this.setState({ tab: e.target.value,message:\"\",error:false })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <form className={classes.root} onSubmit={this.onSubmit} autoComplete=\"off\">\r\n                <TextField\r\n                    // id=\"outlined-password-input\"\r\n                    label=\"Event name\"\r\n                    required\r\n                    // className={classes.textField}\r\n                    onChange={this.onEventChange} value={this.state.event}\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    name=\"event\"\r\n\r\n                    // autoComplete=\"current-password\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                />\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel htmlFor=\"age-simple\">Format</InputLabel>\r\n                    <Select\r\n                        value={this.state.tab}\r\n                        onChange={this.handleTabChange}\r\n                        inputProps={{\r\n                            name: 'age',\r\n                            id: 'age-simple',\r\n                        }}\r\n                    >\r\n\r\n                        <MenuItem value={'String'}>String</MenuItem>\r\n                        <MenuItem value={'Number'}>Number</MenuItem>\r\n                        <MenuItem value={'Object'}>Object</MenuItem>\r\n\r\n                    </Select>\r\n                    <FormHelperText>Select the message formatting</FormHelperText>\r\n                </FormControl>\r\n                {this.state.tab === 'String' && <StringMessage onChange={this.onMessageChange} value={this.state.message} />}\r\n\r\n                {this.state.tab === 'Number' && <NumberMessage onChange={this.onMessageChange} value={this.state.message} />}\r\n                {this.state.tab === 'Object' && <ObjectMessage error={this.state.error} onChange={this.onMessageChange} value={this.state.message} />}\r\n\r\n\r\n                <Button disabled={!this.props.connected || this.state.error} type=\"submit\" variant=\"contained\" color=\"primary\" >\r\n                    Send\r\n              </Button>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(SendMessage);\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst StringMessage = (props) => {\r\n    \r\n    return (\r\n        <TextField\r\n            // id=\"outlined-password-input\"\r\n            label=\"Message\"\r\n          \r\n            \r\n            multiline\r\n            rows={10}\r\n            // className={classes.textField}\r\n            onChange={(e)=>{props.onChange(e.target.value)}} value={props.value}\r\n            type=\"text\"\r\n            fullWidth\r\n            name=\"message\"\r\n\r\n            // autoComplete=\"current-password\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default StringMessage;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst NumberMessage = (props) => {\r\n\r\n    \r\n\r\n    return (\r\n        <TextField\r\n            // id=\"outlined-password-input\"\r\n            label=\"Message\"\r\n            required\r\n            // className={classes.textField}\r\n            onChange={(e)=>{props.onChange(e.target.value)}} value={props.value}\r\n            type=\"number\"\r\n            fullWidth\r\n            name=\"message\"\r\n            // autoComplete=\"current-password\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default NumberMessage;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst ObjectMessage = (props) => {\r\n\r\n   \r\n\r\n\r\n    return (\r\n        <TextField\r\n            // id=\"outlined-password-input\"\r\n            label=\"Object message\"\r\n            required\r\n            error={props.error}\r\n            multiline\r\n            rows={10}\r\n            // className={classes.textField}\r\n            onChange={(e)=>{props.onChange(e.target.value)}} value={props.value}\r\n            type=\"text\"\r\n            fullWidth\r\n            name=\"message\"\r\n\r\n            // autoComplete=\"current-password\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default ObjectMessage;","import React from 'react';\r\n\r\n\r\n\r\n\r\nconst ObjectItem = (props) => {\r\n    // console.log('props',props)\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div>   \r\n        &#123;\r\n            {Object.keys(props.object).map((key) => {\r\n                return (\r\n\r\n                    <div>\r\n                        <span >{key}: </span><span>{props.object[key]}</span>\r\n\r\n                    </div>\r\n\r\n                )\r\n            })}\r\n\r\n            &#125;\t  \r\n        </div>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default ObjectItem;\r\n\r\n\r\n\r\n","import React from 'react';\r\n// import { observer } from 'mobx-react';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import { withStyles } from '@material-ui/core/styles';\r\nimport ObjectItem from './ObjectItem';\r\n\r\n\r\n\r\nconst getContent = (message) => {\r\n    if (typeof message === 'object' && !Array.isArray(message)) {\r\n        return (\r\n            <div>\r\n\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                    Type: Object\r\n                </Typography>\r\n                <Typography color=\"textPrimary\" gutterBottom>\r\n                   <ObjectItem object={message}></ObjectItem>\r\n                </Typography>\r\n            </div>\r\n\r\n        )\r\n    } else if (Array.isArray(message)) {\r\n        return (\r\n            <div>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                    Type: Array\r\n                </Typography>\r\n                <Typography variant=\"h5\" color=\"textPrimary\" gutterBottom>\r\n\r\n                    [{message.toString()}]\r\n                </Typography>\r\n            </div>\r\n        )\r\n    }else if(typeof message === 'number'){\r\n        return (\r\n            <div>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                    Type: Number\r\n         </Typography>\r\n                <Typography variant=\"h5\" color=\"textPrimary\" gutterBottom>\r\n                    {message}\r\n                </Typography>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    else {\r\n        return (\r\n            <div>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                    Type: String\r\n         </Typography>\r\n                <Typography variant=\"h5\" color=\"textPrimary\" gutterBottom>\r\n                    {message}\r\n                </Typography>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nclass Item extends React.PureComponent {\r\n    // console.log('item rendering!',props)\r\n\r\n    render(){\r\n        console.log('item rendering!',this.props)\r\n        return (\r\n\r\n\r\n\r\n            <Card >\r\n                <CardContent style={{padding:'15px'}}>\r\n                    <Typography style={{float:'right'}}   color=\"textSecondary\" gutterBottom>\r\n                        {this.props.time}\r\n                    </Typography>\r\n                    <Typography  color=\"primary\" gutterBottom>\r\n                        {this.props.owner ? 'Sent' : 'Received'} event: {this.props.eventName}\r\n                    </Typography>\r\n                    {getContent(this.props.data)}\r\n                </CardContent>\r\n    \r\n    \r\n               \r\n            </Card>\r\n        )\r\n    }\r\n   \r\n\r\n    \r\n\r\n}\r\n\r\nexport default Item;\r\n\r\n\r\n\r\n// export default (this.props) => {\r\n//     if (typeof this.props.data === 'object') {\r\n\r\n//         return (\r\n//             <p>\r\n//                 <span style={{ color: 'navy' }}>{this.props.time}</span>\r\n//                 {Object.keys(this.props.data).map((key) => {\r\n//                     return (\r\n//                         <p>\r\n\r\n//                             <span onClick={this.props.onClick}>{key}: </span><span>{this.props.data[key]}</span>\r\n//                         </p>\r\n//                     )\r\n//                 })}\r\n\r\n//             </p>\r\n//         )\r\n\r\n\r\n//     } else {\r\n//         return (\r\n\r\n//             <p> <span style={{ color: 'navy' }}>{this.props.time}</span> {this.props.data}</p>\r\n//         )\r\n//     }\r\n\r\n// }","import React from 'react';\r\nimport Item from './Item';\r\n\r\n\r\nexport default (props) => {\r\n\r\n    return (\r\n        <ul style={{ listStyle: 'none', paddingLeft: '0' }}>\r\n\r\n\r\n\r\n\r\n            {props.items.map((item, index) => <li key={item.id} style={{ display: 'block', width: '100%', float: 'left',marginBottom:'15px' }}><div\r\n                style={{\r\n                    // display: 'inline-block',\r\n                    float: item.owner ? 'left' : 'right',\r\n                    width:'40%'\r\n                    \r\n                }}>\r\n                <Item  owner={item.owner} eventName={item.eventName} time={item.time} data={item.data} >\r\n                </Item>\r\n            </div>\r\n            </li>)}\r\n\r\n        </ul>\r\n\r\n    )\r\n\r\n}","import React from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst styles = theme => ({\r\n   \r\n    chip: {\r\n    //   fontSize:'10px'\r\n    },\r\n  });\r\n\r\nconst Event = (props) => {\r\n    const { classes } = props;\r\n    // console.log('event rendering!')\r\n    return (\r\n        <Chip\r\n            label={props.name}\r\n          \r\n            className={classes.chip}\r\n            color=\"primary\"\r\n            icon={<EventIcon/>}\r\n            onDelete={props.onDelete}\r\n            variant=\"outlined\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(Event);\r\n","import React from 'react';\r\nimport Event from './Event';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\nconst styles={\r\n    marginBottom:'10px',\r\n    marginTop:'10px'\r\n}\r\n\r\nexport default (props) => {\r\n    // console.log('events from props',props.events)\r\n    return(\r\n        <div >\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n        Listening to events:\r\n      </Typography>\r\n            {props.events.map(event=><div style={styles}><Event onDelete={()=>{props.onEventDelete(event.name)}} name={event.name}></Event></div>)}\r\n        </div>\r\n     \r\n    )\r\n\r\n}","import React from 'react';\r\n// import { withStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\n\r\nfunction Loader(props) {\r\n//   const { classes } = props;\r\n  return (\r\n    <div>\r\n     \r\n      <CircularProgress size={21}  color=\"inherit\" />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Loader;","import React, { Component } from 'react';\n// import Grid from '@material-ui/core/Grid';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n\nimport Items from './Items';\nimport RegisteredEvents from './RegisteredEvents';\nimport uuid from 'uuid';\nimport './App.scss';\nimport moment from 'moment';\nimport Header from './Header';\nimport AddEvent from './AddEvent'\nimport SendMessage from './MessageSending/SendMessage'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport io from 'socket.io-client';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n  },\n});\n\n// import MenuIcon from '@material-ui/icons/Menu';\n\n// import {observer} from 'mobx-react';\n// import state from './state';\nlet socket;\n\n\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.items = React.createRef();\n  }\n\n  state = {\n    address: \"\",\n    eventName: \"\",\n    items: [],\n    registeredEvents: {},\n    anonymousEvents: {},\n    connectionStatus: 'disconnected',\n    alertOpen: false,\n    alertContent: '',\n    allEventsChecked: false,\n  }\n\n\n\n\n  componentDidMount() {\n\n    // if (process.env.NODE_ENV === 'development') {\n    //   this.addDummyDataForDevelopment();\n    // }\n\n  }\n\n  addDummyDataForDevelopment = () => {\n\n    this.addItem('yoyo', \"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\", true);\n    // this.registerEvent('welcome')\n    // this.registerEvent('welcome2')\n    this.addItem('welcome', 'heyyyy', false);\n\n    // this.registerEvent('welcome')\n\n  }\n\n  registerEvent = (eventName) => {\n    console.log('registering event:', eventName)\n    if (socket) {\n      socket.off(eventName);\n      socket.on(eventName, (data) => {\n        console.log('on:', eventName)\n        this.addItem(eventName, data, false)\n      })\n      this.setState((state) => ({\n        registeredEvents: { ...state.registeredEvents, [eventName]: { name: eventName } }\n      }))\n\n    }\n  }\n\n  registerAnonymousEvent = (eventName) => {\n    console.log('registering anonymous event:', eventName)\n    if (socket) {\n      socket.off(eventName);\n      socket.on(eventName, (data) => {\n        console.log('on:', eventName)\n        this.addItem(eventName, data, false)\n      })\n      // debugger;\n      this.setState((state) => ({\n        anonymousEvents: { ...state.anonymousEvents, [eventName]: { name: eventName } }\n      }))\n\n    }\n  }\n\n  unregisterAnonymousEvents = () => {\n    // debugger;\n    for (let event in this.state.anonymousEvents) {\n      if(!this.state.registeredEvents.hasOwnProperty(event)){\n        socket.off(event)\n      }\n      \n    }\n    this.setState((state) => ({\n      anonymousEvents: {}\n    }))\n  }\n\n  addItem = (eventName, data, owner) => {\n    const id = uuid();\n    const time = this.getTime();\n    this.setState((state, props) => ({\n      ...state,\n      items: [...state.items, { id, eventName, time, data, owner }]\n    }))\n    document.querySelector('#dummy').scrollIntoView({ behavior: 'smooth' })\n  }\n\n\n\n  onConnectSubmit = (address) => {\n    this.connect(address);\n  }\n\n  onDisconnectSubmit = () => {\n    console.log('disconnected manually')\n    socket.disconnect();\n    this.setState({ connectionStatus: 'disconnected' })\n  }\n\n  onMessageSubmit = (eventName, message) => {\n    this.addItem(eventName, message, true);\n    this.emitEvent(eventName, message);\n  }\n\n  emitEvent = (eventName, message) => {\n    socket.emit(eventName, message)\n  }\n\n  onChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      [name]: value\n    })\n  }\n\n\n  onEventSubmit = (eventName) => {\n    console.log(eventName)\n    this.registerEvent(eventName);\n  }\n\n  onEventDelete = (name) => {\n    // this.setState()\n    // debugger;\n    socket.off(name);\n\n    const oldEvents = { ...this.state.registeredEvents };\n    delete oldEvents[name];\n    this.setState({\n      registeredEvents: oldEvents\n    })\n  }\n\n\n  connect = (address) => {\n    console.log('connecting');\n    this.setState(() => ({\n      connectionStatus: 'connecting'\n    }))\n\n    if (socket) {\n      socket.disconnect();\n    }\n\n    socket = window.socket = io(address);\n    this.originalOnevent = socket.onevent;\n    \n    socket.on('connect', () => {\n      console.log('connected!')\n      this.setState({\n        connectionStatus: 'connected',\n      })\n\n\n\n    });\n\n    socket.on('disconnect', (reason) => {\n      console.log('reason', reason)\n      if (reason === 'io server disconnect') {\n        socket.disconnect();\n      }\n      // else the socket will automatically try to reconnect\n    });\n\n    socket.on('connect_error', (error) => {\n      console.log('Error connecting!')\n      this.setState(() => {\n        return {\n          alertContent: 'Error connecting to the server',\n          alertOpen: true\n        }\n      })\n    });\n\n    socket.on('reconnect', (attemptNumber) => {\n      console.log('reconnected');\n      this.setState(() => {\n        return {\n          alertContent: '',\n          connectionStatus: 'connected',\n          alertOpen: false\n        }\n      })\n    });\n\n    // var onevent = socket.onevent;\n    // socket.onevent = function (packet) {\n    //   var args = packet.data || [];\n    //   onevent.call(this, packet);    // original call\n    //   packet.data = [\"*\"].concat(args);\n    //   onevent.call(this, packet);      // additional call to catch-all\n    // };\n\n    // socket.on('*', (event, data) => {\n    //   console.log(event, data)\n    //   this.addItem(event, data)\n    // })\n\n    socket.on('reconnecting', (attemptNumber) => {\n      console.log('reconnecting');\n      this.setState(() => {\n        return {\n          connectionStatus: 'reconnecting',\n        }\n      })\n    });\n\n    if (Object.keys(this.state.registeredEvents).length > 0) {//PROBLEM!!!!!!!! fix it\n      console.log('re-registering events');\n      for (let event of Object.keys(this.state.registeredEvents)) {\n        this.registerEvent(event);\n      }\n    }\n\n\n\n  }\n\n  listenToAllEvents = (on) => {\n    const that = this;\n\n    if (on) {\n\n      socket.onevent = function (packet) {\n        const eventName = packet.data[0];\n        const eventData = packet.data[1];\n\n        that.registerAnonymousEvent(eventName, eventData)\n        console.log('originalevent from within', that.originalOnevent)\n        that.originalOnevent.call(this, packet);    // original call\n\n      };\n\n    } else {\n      socket.onevent = that.originalOnevent;\n\n      that.unregisterAnonymousEvents()\n\n      // that.originalOnevent.call(this,packet);\n      console.log(that.originalOnevent)\n      // that.setState({anonymousEvents:{}});\n      // socket.off('*')\n      // debugger;\n      // console.log('originalevent from outisde',originalOnevent)\n      // socket.onevent = window.originalOnevent =  originalOnevent;\n    }\n\n  }\n\n  getTime = () => {\n    // debugger;\n    // console.log('unix',unix)\n    const unix = this.getMoment();\n    return moment(unix * 1000).format('HH:mm');\n  }\n  getMoment = () => {\n    // console.log(moment().unix())\n    return moment().unix();\n\n  }\n\n\n\n  handleAlertClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    this.setState({ alertOpen: false });\n  };\n\n  handleAllEventsCheck = name => event => {\n    this.setState({ [name]: event.target.checked });\n    this.listenToAllEvents(event.target.checked)\n  };\n\n  render() {\n\n    // console.log(Object.values(this.state.registeredEvents))\n\n    return (\n\n      <MuiThemeProvider theme={theme}>\n        <div id=\"wrapper\">\n          <Header connectionStatus={this.state.connectionStatus} onDisconnectSubmit={this.onDisconnectSubmit} onConnectSubmit={this.onConnectSubmit}></Header>\n\n          <div id=\"main\">\n\n            <div className=\"special_scroll\" id=\"panel\">\n\n              <div id=\"send_messages\">\n                <Typography gutterBottom variant=\"h6\">Send messages</Typography>\n                <SendMessage connected={this.state.connectionStatus === 'connected'} onSubmit={this.onMessageSubmit}></SendMessage>\n\n              </div>\n\n\n              <div id=\"events\">\n                <Typography gutterBottom variant=\"h6\">Register events</Typography>\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={this.state.handleAllEventsCheck}\n                      onChange={this.handleAllEventsCheck('allEventsChecked')}\n                      value=\"allEventsChecked\"\n                      color=\"primary\"\n                    />\n                  }\n\n                  label=\"Listen to all incoming events\"\n                />\n\n                <AddEvent connected={this.state.connectionStatus === 'connected'} onSubmit={this.onEventSubmit}></AddEvent>\n                {Object.keys(this.state.registeredEvents).length > 0 && (\n\n                  <div id=\"registered_events\" >\n                    <RegisteredEvents onEventDelete={this.onEventDelete} events={Object.values(this.state.registeredEvents)}></RegisteredEvents>\n                  </div>\n\n                )}\n              </div>\n\n\n\n\n\n\n            </div>\n\n            <div className=\"special_scroll\" ref={this.items} id=\"items\">\n\n              <Typography variant=\"h6\" gutterBottom>\n                Messages sent/received\n          </Typography>\n              <Items items={this.state.items} />\n              <div style={{ float: \"left\", clear: \"both\" }} id=\"dummy\">\n\n              </div>\n            </div>\n\n\n\n\n          </div>\n\n\n\n        </div>\n\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          variant=\"error\"\n          open={this.state.alertOpen}\n          autoHideDuration={4000}\n          onClose={this.handleAlertClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{this.state.alertContent}</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              // className={classes.close}\n              onClick={this.handleAlertClose}\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n\n\n      </MuiThemeProvider>\n\n\n    );\n  }\n}\n\n\n\n\n\n\n\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CastConnectedIcon from '@material-ui/icons/CastConnected';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Loader from './Loader'\r\n\r\n\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\n\r\nconst styles = theme => (\r\n    {\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n\r\n        search: {\r\n            position: 'relative',\r\n            borderRadius: theme.shape.borderRadius,\r\n            backgroundColor: fade(theme.palette.common.white, 0.15),\r\n            '&:hover': {\r\n                backgroundColor: fade(theme.palette.common.white, 0.25),\r\n            },\r\n            marginRight: theme.spacing.unit * 2,\r\n            marginLeft: 0,\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: theme.spacing.unit * 3,\r\n                width: 'auto',\r\n            },\r\n        },\r\n        searchIcon: {\r\n            width: theme.spacing.unit * 9,\r\n            height: '100%',\r\n            position: 'absolute',\r\n            pointerEvents: 'none',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        inputRoot: {\r\n            color: 'inherit',\r\n            width: '100%',\r\n        },\r\n        inputInput: {\r\n\r\n\r\n            paddingTop: theme.spacing.unit,\r\n            paddingRight: theme.spacing.unit,\r\n            paddingBottom: theme.spacing.unit,\r\n            paddingLeft: theme.spacing.unit * 10,\r\n            transition: theme.transitions.create('width'),\r\n            width: '100%',\r\n            [theme.breakpoints.up('md')]: {\r\n                width: 200,\r\n            },\r\n        },\r\n    }\r\n);\r\n\r\nclass Header extends React.Component {\r\n\r\n    state = {\r\n        address: \"localhost:3001\"\r\n    }\r\n\r\n    onChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        switch (this.props.connectionStatus) {\r\n            case 'connected':\r\n            case 'reconnecting':\r\n            case 'connecting':\r\n                this.onDisconnectSubmit();\r\n\r\n                break;\r\n            case 'disconnected':\r\n                this.onConnectSubmit();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    onConnectSubmit = (e) => {\r\n        // e.preventDefault();\r\n        // alert(this.state.address)\r\n        this.props.onConnectSubmit(this.state.address);\r\n    }\r\n\r\n    onDisconnectSubmit = (e) => {\r\n        // e.preventDefault();\r\n        // alert(this.state.address)\r\n        this.props.onDisconnectSubmit();\r\n    }\r\n\r\n    renderButton = () => {\r\n        switch (this.props.connectionStatus) {\r\n            case 'connected':\r\n                return <Button type=\"submit\" color=\"inherit\">Disconnect</Button>;\r\n            case 'reconnecting':\r\n            case 'connecting':\r\n                return <Button type=\"submit\" color=\"inherit\">Cancel</Button>;\r\n            case 'disconnected':\r\n                return <Button type=\"submit\" color=\"inherit\">Connect</Button>;\r\n            // case 'connecting':\r\n            //     return <Typography color=\"inherit\" variant=\"subtitle1\" >Connecting...</Typography>;\r\n            // default:\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderStatus = () => {\r\n        switch (this.props.connectionStatus) {\r\n\r\n            case 'reconnecting':\r\n            case 'connecting':\r\n                return <Loader></Loader>;\r\n            case 'disconnected':\r\n                return <SearchIcon></SearchIcon>;\r\n            case 'connected':\r\n               return <CastConnectedIcon></CastConnectedIcon>;\r\n            default:\r\n                return '';\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <form autoComplete=\"off\" onSubmit={this.onSubmit} className={classes.root}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n\r\n                        <div className={classes.search}>\r\n                            <div className={classes.searchIcon}>\r\n                                {this.renderStatus()}\r\n\r\n                            </div>\r\n                            <InputBase\r\n                                name=\"address\"\r\n                                value={this.state.address}\r\n                                onChange={this.onChange}\r\n                                placeholder=\"localhost:3001\"\r\n                                classes={{\r\n                                    root: classes.inputRoot,\r\n                                    input: classes.inputInput,\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        {this.renderButton()}\r\n\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </form>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Header);","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class AddEvent extends React.Component {\r\n    state = {\r\n        event: \"\"\r\n    }\r\n\r\n    onChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        // alert(this.state.address)\r\n        this.props.onSubmit(this.state.event);\r\n    }\r\n\r\n    // render() {\r\n    //     return (\r\n    //         <form onSubmit={this.onSubmit} className=\"form-inline\">\r\n\r\n    //             <div className=\"form-group mx-sm-3 mb-2\">\r\n\r\n    //                 <input onChange={this.onChange} value={this.state.event} type=\"text\" className=\"form-control\" id=\"event\" name=\"event\" placeholder=\"Event name\" />\r\n    //             </div>\r\n    //             <button type=\"submit\" className=\"btn btn-primary mb-2\">Register event</button>\r\n    //         </form>\r\n\r\n    //     )\r\n    // }\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmit} >\r\n                    \r\n                <TextField                  \r\n                    label=\"Event name\"\r\n                    required               \r\n                    onChange={this.onChange} value={this.state.event} \r\n                    type=\"text\"\r\n                    fullWidth\r\n                    name=\"event\"                \r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                />\r\n                <Button disabled={!this.props.connected} type=\"submit\" variant=\"contained\" color=\"primary\" >\r\n                    Register\r\n                </Button>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}