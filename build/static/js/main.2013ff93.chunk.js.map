{"version":3,"sources":["MessageSending/SendMessage.js","MessageSending/StringMessage.js","MessageSending/NumberMessage.js","MessageSending/ObjectMessage.js","Alert.js","global.js","Message.js","Messages.js","Event.js","RegisteredEvents.js","Loader.js","App.js","Header.js","AddEvent.js","serviceWorker.js","index.js"],"names":["styles","theme","formControl","margin","spacing","unit","minWidth","selectEmpty","marginTop","SendMessage","state","event","message","tab","error","onEventChange","e","target","value","_this","setState","onMessageChange","isObject","evalResult","eval","concat","onSubmit","preventDefault","parseInt","props","handleTabChange","classes","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","root","autoComplete","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_6___default","label","required","onChange","type","fullWidth","name","variant","_material_ui_core_FormControl__WEBPACK_IMPORTED_MODULE_11___default","_material_ui_core_InputLabel__WEBPACK_IMPORTED_MODULE_8___default","htmlFor","_material_ui_core_Select__WEBPACK_IMPORTED_MODULE_13___default","inputProps","id","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_9___default","_material_ui_core_FormHelperText__WEBPACK_IMPORTED_MODULE_12___default","_StringMessage__WEBPACK_IMPORTED_MODULE_14__","_NumberMessage__WEBPACK_IMPORTED_MODULE_15__","_ObjectMessage__WEBPACK_IMPORTED_MODULE_16__","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_7___default","disabled","connected","color","React","Component","withStyles","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_1___default","StringMessage","multiline","rows","NumberMessage","ObjectMessage","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","backgroundColor","palette","dark","primary","amber","icon","fontSize","iconVariant","opacity","marginRight","display","alignItems","onClose","other","Object","objectWithoutProperties","Icon","react_default","SnackbarContent_default","assign","classNames","aria-describedby","action","IconButton_default","key","aria-label","close","onClick","Close_default","handleAlertClose","reason","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","nature","content","observable","alertOpen","alertNature","alertContent","connectionStatus","window","handleAlertCloseAction","createAlertAction","Message","getType","Array","isArray","onDataCopy","str","el","document","JSON","stringify","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","_this2","owner","console","log","Card_default","CardContent_default","padding","Typography_default","float","gutterBottom","time","eventName","data","lib","objectSpread","chromeLight","TREENODE_FONT_SIZE","TREENODE_FONT_FAMILY","bottom","Tooltip_default","title","FileCopy_default","textAlign","Done_default","status","PureComponent","pending","scrollToBottom","messagesDiv","scrollTop","scrollHeight","querySelector","messagesList","prevProps","messages","length","shouldScrollDown","lastMessage","childNodes","clientHeight","offsetHeight","listStyle","paddingLeft","map","index","width","marginBottom","src_Message","chip","Chip_default","Event_default","onDelete","RegisteredEvents","events","src_Event","onEventDelete","Loader","socket","CircularProgress_default","size","Header","address","defineProperty","onDisconnectSubmit","onConnectSubmit","renderButton","Button_default","renderStatus","src_Loader","Search_default","CastConnected_default","AppBar_default","Toolbar_default","search","searchIcon","InputBase_default","placeholder","inputRoot","input","inputInput","flexGrow","borderRadius","shape","fade","common","white","&:hover","marginLeft","breakpoints","up","height","pointerEvents","justifyContent","paddingTop","paddingRight","paddingBottom","transition","transitions","create","AddEvent","TextField_default","createMuiTheme","blue","green","grey","observer","_Component","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","registeredEvents","anonymousEvents","allEventsChecked","connect","disconnect","io","originalOnevent","onevent","on","attemptNumber","keys","_arr","_i","registerEvent","registerEventCallback","off","uuid","addMessageToState","registerAnonymousEvent","unregisterAnonymousEvents","hasOwnProperty","onMessagesDelete","onMessageSubmit","sendMessageToServer","getTime","toConsumableArray","emit","changeMessage","messageId","prop","onEventSubmit","oldEvents","listenToAllEvents","that","assertThisInitialized","packet","eventData","handleAllEventsCheck","checked","unix","getMoment","moment","format","createRef","inherits","createClass","core_styles","src_Header","FormControlLabel_default","control","Checkbox_default","AddEvent_AddEvent","values","DeleteSweep_default","Messages_default","clear","src_Alert","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2013ff93.chunk.js","sourcesContent":["import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport Select from '@material-ui/core/Select';\r\nimport StringMessage from './StringMessage';\r\nimport NumberMessage from './NumberMessage';\r\nimport ObjectMessage from './ObjectMessage';\r\n\r\n\r\nconst styles = theme => ({\r\n    // root: {\r\n    //     display: 'flex',\r\n    //     flexWrap: 'wrap',\r\n    // },\r\n    formControl: {\r\n        margin: theme.spacing.unit,\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing.unit * 2,\r\n    },\r\n});\r\n\r\n\r\nclass SendMessage extends React.Component {\r\n    state = {\r\n        // event: process.env.NODE_ENV ===  'development' ? \"yoyo\" : '',\r\n        event: \"\",\r\n        message: \"\",\r\n        tab: 'String',\r\n        error: false\r\n    }\r\n\r\n    onEventChange = (e) => {\r\n\r\n        const event = e.target.value;\r\n\r\n        this.setState({ event })\r\n    }\r\n\r\n    onMessageChange = (message) => {\r\n        let error = false;\r\n        if (this.state.tab === 'Object') {\r\n            const parsedMessage = this.isObject(message);\r\n            if (!parsedMessage) {\r\n                error = true;\r\n            }\r\n        }\r\n        this.setState({ message, error });\r\n    }\r\n\r\n    isObject = (value) => {//Returns the parsed object on success, false on failure.\r\n        // debugger;\r\n        let evalResult;\r\n        try {\r\n            eval(`evalResult = ${value}`) // if it doesn't throw it's a valid array or object\r\n            if (typeof evalResult === 'object') {\r\n                return evalResult;\r\n            } else {\r\n                return false;\r\n            }\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        // debugger;\r\n        e.preventDefault();\r\n        let value = this.state.message;\r\n        // this.validateInput(value)\r\n        switch (this.state.tab) {\r\n            case 'Number':\r\n                value = parseInt(value)\r\n                break;\r\n            case 'Object':\r\n                // debugger;\r\n                let evalResult;\r\n                eval(`evalResult = ${value}`);\r\n                value = evalResult;\r\n            default:\r\n                break;\r\n        }\r\n\r\n\r\n        // alert(this.state.address)\r\n        this.props.onSubmit(this.state.event, value);\r\n    }\r\n\r\n    handleTabChange = (e) => {\r\n        this.setState({ tab: e.target.value,message:\"\",error:false })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <form className={classes.root} onSubmit={this.onSubmit} autoComplete=\"off\">\r\n                <TextField\r\n                    // id=\"outlined-password-input\"\r\n                    label=\"Event name\"\r\n                    required\r\n                    // className={classes.textField}\r\n                    onChange={this.onEventChange} value={this.state.event}\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    name=\"event\"\r\n\r\n                    // autoComplete=\"current-password\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                />\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel htmlFor=\"age-simple\">Format</InputLabel>\r\n                    <Select\r\n                        value={this.state.tab}\r\n                        onChange={this.handleTabChange}\r\n                        inputProps={{\r\n                            name: 'age',\r\n                            id: 'age-simple',\r\n                        }}\r\n                    >\r\n\r\n                        <MenuItem value={'String'}>String</MenuItem>\r\n                        <MenuItem value={'Number'}>Number</MenuItem>\r\n                        <MenuItem value={'Object'}>Object</MenuItem>\r\n\r\n                    </Select>\r\n                    <FormHelperText>Select message type</FormHelperText>\r\n                </FormControl>\r\n                {this.state.tab === 'String' && <StringMessage onChange={this.onMessageChange} value={this.state.message} />}\r\n\r\n                {this.state.tab === 'Number' && <NumberMessage onChange={this.onMessageChange} value={this.state.message} />}\r\n                {this.state.tab === 'Object' && <ObjectMessage error={this.state.error} onChange={this.onMessageChange} value={this.state.message} />}\r\n\r\n\r\n                <Button disabled={!this.props.connected || this.state.error} type=\"submit\" variant=\"contained\" color=\"primary\" >\r\n                    Send\r\n              </Button>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(SendMessage);\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst StringMessage = (props) => {\r\n    \r\n    return (\r\n        <TextField\r\n            // id=\"outlined-password-input\"\r\n            label=\"Message\"\r\n          \r\n            \r\n            multiline\r\n            rows={10}\r\n            // className={classes.textField}\r\n            onChange={(e)=>{props.onChange(e.target.value)}} value={props.value}\r\n            type=\"text\"\r\n            fullWidth\r\n            name=\"message\"\r\n\r\n            // autoComplete=\"current-password\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default StringMessage;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst NumberMessage = (props) => {\r\n\r\n    \r\n\r\n    return (\r\n        <TextField\r\n            // id=\"outlined-password-input\"\r\n            label=\"Message\"\r\n            required\r\n            // className={classes.textField}\r\n            onChange={(e)=>{props.onChange(e.target.value)}} value={props.value}\r\n            type=\"number\"\r\n            fullWidth\r\n            name=\"message\"\r\n            // autoComplete=\"current-password\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default NumberMessage;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n// import 'codemirror/lib/codemirror.css';\r\n// import 'codemirror/theme/material.css';\r\n// import 'codemirror/mode/javascript/javascript'\r\n// import { Controlled as CodeMirror } from 'react-codemirror2'\r\n\r\nconst ObjectMessage = (props) => {\r\n\r\n    // return (\r\n    //     <div>\r\n    //         <CodeMirror\r\n    //             value={props.value}\r\n    //             options={{ mode: { name: 'javascript', json: true } }}\r\n    //             onBeforeChange={(editor, data, value) => {\r\n    //                 props.onChange(value)\r\n    //             }}\r\n                \r\n    //         />\r\n    //     </div>\r\n    // )\r\n\r\n\r\n    return (\r\n        <TextField\r\n            // id=\"outlined-password-input\"\r\n            label=\"Object message\"\r\n            required\r\n            error={props.error}\r\n            multiline\r\n            rows={10}\r\n            // className={classes.textField}\r\n            onChange={(e)=>{props.onChange(e.target.value)}} value={props.value}\r\n            type=\"text\"\r\n            fullWidth\r\n            name=\"message\"\r\n\r\n            // autoComplete=\"current-password\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default ObjectMessage;","import React from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\n// import Button from '@material-ui/core/Button';\r\n\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport green from '@material-ui/core/colors/green';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\nconst styles1 = theme => ({\r\n    success: {\r\n        backgroundColor: theme.palette.success,\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing.unit,\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\nconst styles2 = theme => ({\r\n    margin: {\r\n        margin: theme.spacing.unit,\r\n    },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n    const { classes, className, message, onClose, variant, ...other } = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n            className={classNames(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n                    <Icon className={classNames(classes.icon, classes.iconVariant)} />\r\n                    {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    className={classes.close}\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon className={classes.icon} />\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\r\n\r\n\r\n\r\nconst Alert = (props) => {\r\n\r\n    // const { classes } = this.props;\r\n    // console.log('alert rendering');\r\n\r\n    const handleAlertClose = (event,reason) => {\r\n        props.handleAlertClose(event,reason);\r\n    }\r\n\r\n    return (\r\n        <Snackbar\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n            }}\r\n            open={props.open}\r\n            autoHideDuration={4000}\r\n            onClose={handleAlertClose}\r\n        >\r\n            <MySnackbarContentWrapper\r\n                onClose={handleAlertClose}\r\n                variant={props.nature || 'info'}\r\n                message={<span id=\"message-id\">{props.content}</span>}\r\n            />\r\n        </Snackbar>\r\n\r\n    )\r\n}\r\n\r\nexport default withStyles(styles2)(Alert);\r\n","import {observable} from 'mobx';\r\n\r\n\r\n\r\nconst schema = {\r\n    alertOpen: false,\r\n    alertNature:'error',\r\n    alertContent: '',\r\n    connectionStatus:\"disconnected\"  \r\n        \r\n}\r\n\r\nconst state = observable(schema);\r\n\r\nexport default window.state = state;\r\n\r\n\r\n\r\nexport const handleAlertCloseAction = (event, reason) => {\r\n  \r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    state.alertOpen=false;\r\n  }; \r\n\r\nexport const createAlertAction = (nature,message)=>{\r\n  Object.assign(state,{\r\n    alertOpen:true,\r\n    alertNature:nature,\r\n    alertContent:message\r\n  })\r\n}  \r\n\r\n\r\n","import React from 'react';\r\n\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CopyIcon from '@material-ui/icons/FileCopy';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nimport { ObjectInspector } from 'react-inspector'\r\nimport { chromeLight } from 'react-inspector'\r\nimport { createAlertAction } from './global';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    success: {\r\n        color: theme.palette.success,\r\n    },\r\n    pending:{\r\n        color:theme.palette.pending\r\n    }\r\n});\r\n\r\n\r\nclass Message extends React.PureComponent {\r\n\r\n    getType = (message) => {\r\n        // debugger;\r\n        switch (typeof message) {\r\n            case 'string':\r\n                return 'String'\r\n            case 'object':\r\n                if (Array.isArray(message)) {\r\n                    return 'Array';\r\n                } else {\r\n                    return 'Object';\r\n                }\r\n            case 'number':\r\n                return 'Number';\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onDataCopy = (str) => {\r\n        const el = document.createElement('textarea');  // Create a <textarea> element\r\n        if (typeof str === 'object') {\r\n            try {\r\n                str = JSON.stringify(str);\r\n            } catch (error) {\r\n\r\n                return createAlertAction('error', 'Unable to copy');\r\n            }\r\n\r\n        }\r\n        el.value = str;                                 // Set its value to the string that you want copied\r\n        el.setAttribute('readonly', '');                // Make it readonly to be tamper-proof\r\n        el.style.position = 'absolute';\r\n        el.style.left = '-9999px';                      // Move outside the screen to make it invisible\r\n        document.body.appendChild(el);                  // Append the <textarea> element to the HTML document\r\n        const selected =\r\n            document.getSelection().rangeCount > 0        // Check if there is any content selected previously\r\n                ? document.getSelection().getRangeAt(0)     // Store selection if found\r\n                : false;                                    // Mark as false to know no selection existed before\r\n        el.select();                                    // Select the <textarea> content\r\n        document.execCommand('copy');                   // Copy - only works as a result of a user action (e.g. click events)\r\n        document.body.removeChild(el);                  // Remove the <textarea> element\r\n        if (selected) {                                 // If a selection existed before copying\r\n            document.getSelection().removeAllRanges();    // Unselect everything on the HTML document\r\n            document.getSelection().addRange(selected);   // Restore the original selection\r\n        }\r\n\r\n        createAlertAction('success', 'Copied to clipboard!');\r\n\r\n    }\r\n\r\n    // handleHover = () => {\r\n    //     this.setState({ CopyButtonShown: !this.state.CopyButtonShown })\r\n    // }\r\n\r\n\r\n    render() {\r\n        const owner = this.props.owner;\r\n        console.log('item rendering!', this.props)\r\n        return (\r\n\r\n\r\n\r\n            <Card >\r\n                <CardContent style={{ padding: '15px' }}>\r\n                    <Typography style={{ float: 'right' }} color=\"textSecondary\" gutterBottom>\r\n                        {this.props.time}\r\n                    </Typography>\r\n                    \r\n                    <Typography color=\"primary\" gutterBottom>\r\n                        {owner ? 'Sent' : 'Received'} event: {this.props.eventName}\r\n                    </Typography>\r\n                   \r\n                    <Typography color=\"textSecondary\" gutterBottom>\r\n                        Type: {this.getType(this.props.data)}\r\n                    </Typography>\r\n                    <ObjectInspector theme={{ ...chromeLight, ...({ TREENODE_FONT_SIZE: '18px', TREENODE_FONT_FAMILY: 'roboto,helvetica,arial' }) }} data={this.props.data} />\r\n\r\n                    <div style={{ float: 'right', position: 'relative', left: '6px', bottom: '49px' }} >\r\n                        <Tooltip title=\"Copy to clipboard\">\r\n                            <IconButton onClick={() => { this.onDataCopy(this.props.data) }} ><CopyIcon fontSize=\"small\"></CopyIcon></IconButton>\r\n                        </Tooltip>\r\n                        {owner && (\r\n\r\n                          <div style={{textAlign:'center'}}>  <DoneIcon style={{color:this.props.status  === 'success' ?'green' : 'grey'}}></DoneIcon></div>\r\n    \r\n                        )}\r\n\r\n                    </div>\r\n                </CardContent>\r\n\r\n\r\n\r\n            </Card>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Message);\r\n\r\n\r\n// export default Message;\r\n\r\n","import React from 'react';\r\nimport Message from './Message';\r\n\r\n\r\n\r\nexport default class extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        this.messagesDiv = document.querySelector('#messages');//The scrolled container\r\n\r\n        this.messagesList = document.querySelector('#messages_list');//The actual UL. The ID is set in the messages component.\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // debugger;\r\n\r\n        console.log('prev props', prevProps)\r\n        console.log('current props', this.props)\r\n\r\n        if (this.props.messages.length > 0 && prevProps.messages.length !== this.props.messages.length) {\r\n            if (this.shouldScrollDown(this.props.messages[this.props.messages.length - 1])) {\r\n                this.scrollToBottom();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    shouldScrollDown(lastMessage) {\r\n\r\n        if (lastMessage.owner) {\r\n            return true;\r\n        } else if (this.messagesList.childNodes.length > 1) {//Check if there is more than one item first.\r\n\r\n            const scrollHeight = this.messagesDiv.scrollHeight;\r\n\r\n            const clientHeight = this.messagesDiv.clientHeight;\r\n\r\n            const scrollTop = this.messagesDiv.scrollTop;\r\n\r\n            const lastItemHeight = this.messagesList.childNodes[this.messagesList.childNodes.length - 1].offsetHeight\r\n\r\n            const oneBeforeLastItemHeight = this.messagesList.childNodes[this.messagesList.childNodes.length - 2].offsetHeight\r\n\r\n            if (clientHeight + scrollTop + lastItemHeight + oneBeforeLastItemHeight >= scrollHeight) {\r\n                return true\r\n\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    scrollToBottom = () => {\r\n\r\n        this.messagesDiv.scrollTop = this.messagesDiv.scrollHeight;\r\n\r\n    }\r\n\r\n    // console.log(window.copy)\r\n    render() {\r\n        return (\r\n\r\n\r\n\r\n\r\n            <ul id=\"messages_list\" style={{ listStyle: 'none', paddingLeft: '0' }}>\r\n\r\n\r\n\r\n\r\n                {this.props.messages.map((message, index) => <li key={message.id} style={{ display: 'block', width: '100%', float: 'left', marginBottom: '15px', marginTop: '15px' }}><div\r\n                    style={{\r\n                        // display: 'inline-block',\r\n                        float: message.owner ? 'left' : 'right',\r\n                        width: '40%'\r\n\r\n                    }}>\r\n                    <Message  {...message} >\r\n                    </Message>\r\n                </div>\r\n                </li>)}\r\n\r\n            </ul>\r\n\r\n\r\n\r\n        )\r\n    }\r\n\r\n\r\n}","import React from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst styles = theme => ({\r\n   \r\n    chip: {\r\n    //   fontSize:'10px'\r\n    },\r\n  });\r\n\r\nconst Event = (props) => {\r\n    const { classes } = props;\r\n    // console.log('event rendering!')\r\n    return (\r\n        <Chip\r\n            label={props.name}\r\n          \r\n            className={classes.chip}\r\n            color=\"primary\"\r\n            icon={<EventIcon/>}\r\n            onDelete={props.onDelete}\r\n            variant=\"outlined\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(Event);\r\n","import React from 'react';\r\nimport Event from './Event';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\nconst styles={\r\n    marginBottom:'10px',\r\n    marginTop:'10px'\r\n}\r\n\r\nexport default (props) => {\r\n    // console.log('events from props',props.events)\r\n    return(\r\n        <div >\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n        Listening to events:\r\n      </Typography>\r\n            {props.events.map(event=><div style={styles}><Event onDelete={()=>{props.onEventDelete(event.name)}} name={event.name}></Event></div>)}\r\n        </div>\r\n     \r\n    )\r\n\r\n}","import React from 'react';\r\n// import { withStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\n\r\nfunction Loader(props) {\r\n//   const { classes } = props;\r\n  return (\r\n    <div>\r\n     \r\n      <CircularProgress size={21}  color=\"inherit\" />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Loader;","import React, { Component } from 'react';\n// import Grid from '@material-ui/core/Grid';\nimport Alert from './Alert';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport DeleteSweepIcon from '@material-ui/icons/DeleteSweep';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { observer } from 'mobx-react';\n// import { runInAction } from 'mobx';\nimport Messages from './Messages';\nimport RegisteredEvents from './RegisteredEvents';\nimport uuid from 'uuid';\nimport './App.scss';\nimport moment from 'moment';\nimport Header from './Header';\nimport AddEvent from './AddEvent'\nimport SendMessage from './MessageSending/SendMessage'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport {blue,green,grey} from '@material-ui/core/colors';\nimport io from 'socket.io-client';\nimport state from './global';\nimport { handleAlertCloseAction, createAlertAction } from './global'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    success:green[600],\n    pending:grey\n  },\n});\n\n// import MenuIcon from '@material-ui/icons/Menu';\n\n// import {observer} from 'mobx-react';\n// import state from './state';\nlet socket;\n\n\nexport default observer(\n  class App extends Component {\n\n    constructor(props) {\n      super(props);\n      this.messages = React.createRef();\n    }\n\n    state = {\n      address: \"\",\n      eventName: \"\",\n      messages: [],\n      registeredEvents: {},\n      anonymousEvents: {},\n      allEventsChecked: false,\n    }\n\n\n\n    connect = (address) => {\n      console.log('connecting');\n\n      state.connectionStatus = 'connecting';\n\n      if (socket) {\n        socket.disconnect();\n      }\n\n      socket = window.socket = io(address);\n\n      this.originalOnevent = socket.onevent;//Create a reference to the original onevent function of SocketIO, to be used by the \"listen to all events\" mechanism.\n\n\n      socket.on('connect', () => {\n        console.log('connected!')\n\n        state.connectionStatus = 'connected';\n\n      });\n\n\n      socket.on('disconnect', (reason) => {\n        console.log('reason', reason)\n        if (reason === 'io server disconnect') {\n          socket.disconnect();\n        }\n        // else the socket will automatically try to reconnect\n      });\n\n\n      socket.on('connect_error', (error) => {\n        console.log('Error connecting!', state)\n\n        createAlertAction('error', 'Error connecting to the server');\n\n      });\n\n\n      socket.on('reconnect', (attemptNumber) => {\n        console.log('reconnected');\n\n        state.alertOpen = false;\n        state.connectionStatus = 'connected';\n\n      });\n\n\n      socket.on('reconnecting', (attemptNumber) => {\n        console.log('reconnecting');\n\n        state.connectionStatus = \"reconnecting\";\n      });\n\n\n      if (Object.keys(this.state.registeredEvents).length > 0) {//PROBLEM!!!!!!!! fix it\n        console.log('re-registering events');\n        for (let event of Object.keys(this.state.registeredEvents)) {\n          this.registerEvent(event);\n        }\n      }\n\n    }\n\n\n    registerEvent = (eventName) => {\n      // console.log('registering event:', eventName)\n      this.registerEventCallback(eventName);\n\n      this.setState((state) => ({\n        registeredEvents: { ...state.registeredEvents, [eventName]: { name: eventName } }\n      }))\n\n\n    }\n\n    registerEventCallback = (eventName) => {\n      if (socket) {\n        socket.off(eventName);\n        socket.on(eventName, (data) => {\n          const id = uuid();\n          console.log('on:', eventName)\n          this.addMessageToState(id, eventName, data, false)\n        })\n      }\n\n    }\n\n    registerAnonymousEvent = (eventName) => {//This registers a callback for an event coming from SocketIO's Socket.prototype.onevent function.\n      console.log('registering anonymous event:', eventName)\n      this.registerEventCallback(eventName);\n      // debugger;\n      this.setState((state) => ({\n        anonymousEvents: { ...state.anonymousEvents, [eventName]: { name: eventName } }\n      }))\n\n    }\n\n\n    unregisterAnonymousEvents = () => {\n      // debugger;\n      for (let event in this.state.anonymousEvents) {\n        if (!this.state.registeredEvents.hasOwnProperty(event)) {\n          socket.off(event)\n        }\n\n      }\n      this.setState((state) => ({\n        anonymousEvents: {}\n      }))\n    }\n\n\n\n    onMessagesDelete = () => {\n      this.setState((state) => {\n        return {\n          ...state,\n          messages: []\n        }\n      })\n    }\n\n    \n\n    onConnectSubmit = (address) => {\n      this.connect(address);\n    }\n\n\n    onDisconnectSubmit = () => {\n      console.log('disconnected manually')\n      socket.disconnect();\n      // this.setState({ connectionStatus: 'disconnected' })\n      state.connectionStatus = 'disconnected';\n\n    }\n\n    onMessageSubmit = (eventName, message) => {\n      const id = uuid();\n      this.addMessageToState(id, eventName, message, true);\n      this.sendMessageToServer(id, eventName, message);\n    }\n\n    addMessageToState = (id, eventName, data, owner) => {\n\n      const time = this.getTime();\n      this.setState((state, props) => ({\n        ...state,\n        messages: [...state.messages, { id, eventName, time, data, owner, status: 'pending' }]\n      }))\n\n      // document.querySelector('#dummy').scrollIntoView({ behavior: 'smooth' })\n    }\n\n    sendMessageToServer = (id, eventName, message) => {\n      const callback = (data) => {\n        // debugger;\n        console.log('data from callback', data)\n        this.changeMessage(id,'status','success');\n      }\n      socket.emit(eventName, message, callback)\n    }\n\n    changeMessage = (messageId, prop, value) => {\n      this.setState((state) => {\n        const messages = state.messages.map((message) => {\n          if (message.id === messageId) {\n            return {\n              ...message,\n              [prop]: value\n            }\n          } else {\n            return message;\n          }\n        })\n        return {\n          messages\n        }\n      })\n    }\n\n    onChange = (e) => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      })\n    }\n\n\n    onEventSubmit = (eventName) => {\n      console.log(eventName)\n      this.registerEvent(eventName);\n    }\n\n    onEventDelete = (name) => {\n      // this.setState()\n      // debugger;\n      socket.off(name);\n\n      const oldEvents = { ...this.state.registeredEvents };\n      delete oldEvents[name];\n      this.setState({\n        registeredEvents: oldEvents\n      })\n    }\n\n\n\n\n    listenToAllEvents = (on) => {\n\n      const that = this;\n\n      if (on) {\n\n        socket.onevent = function (packet) {//This intercepts the original onevent function, which gets fired on every incoming event.\n          const eventName = packet.data[0];//Extracts the event name.\n\n          const eventData = packet.data[1];//Extracts the data.\n\n          that.registerAnonymousEvent(eventName, eventData)//Registers the event\n\n          that.originalOnevent.call(this, packet);//Calls the original onevent function, for normal application flow.\n\n        };\n\n      } else {\n        socket.onevent = that.originalOnevent;\n\n        that.unregisterAnonymousEvents()\n\n      }\n\n    }\n\n\n\n    handleAllEventsCheck = name => event => {\n      this.setState({ [name]: event.target.checked });\n      this.listenToAllEvents(event.target.checked)\n    };\n\n    getTime = () => {\n\n      const unix = this.getMoment();\n      return moment(unix * 1000).format('HH:mm');\n    }\n\n\n    getMoment = () => {\n\n      return moment().unix();\n\n    }\n\n\n\n    handleAlertClose = (event, reason) => {\n      handleAlertCloseAction(event, reason);\n    };\n\n\n\n    render() {\n\n      return (\n\n        <MuiThemeProvider theme={theme}>\n          <div id=\"wrapper\">\n            <Header connectionStatus={state.connectionStatus} onDisconnectSubmit={this.onDisconnectSubmit} onConnectSubmit={this.onConnectSubmit}></Header>\n\n            <div id=\"main\">\n\n              <div className=\"special_scroll\" id=\"panel\">\n\n                <div id=\"send_messages\">\n                  <Typography gutterBottom variant=\"h6\">Send messages</Typography>\n                  <SendMessage connected={state.connectionStatus === 'connected'} onSubmit={this.onMessageSubmit}></SendMessage>\n\n                </div>\n\n                <div id=\"events\">\n                  <Typography gutterBottom variant=\"h6\">Register events</Typography>\n\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        disabled={state.connectionStatus !== 'connected'}\n                        checked={this.state.handleAllEventsCheck}\n                        onChange={this.handleAllEventsCheck('allEventsChecked')}\n                        value=\"allEventsChecked\"\n                        color=\"primary\"\n                      />\n                    }\n\n                    label=\"Listen to all incoming events\"\n                  />\n\n                  <AddEvent connected={state.connectionStatus === 'connected'} onSubmit={this.onEventSubmit}></AddEvent>\n                  {Object.keys(this.state.registeredEvents).length > 0 && (\n\n                    <div id=\"registered_events\" >\n                      <RegisteredEvents onEventDelete={this.onEventDelete} events={Object.values(this.state.registeredEvents)}></RegisteredEvents>\n                    </div>\n\n                  )}\n                </div>\n              </div>\n\n              <div className=\"special_scroll\"  id=\"messages\">\n\n                <Typography variant=\"h6\" gutterBottom>\n                  Messages sent/received\n                {this.state.messages.length > 0 && (\n                    <div style={{ float: 'right' }}>\n\n                      <Tooltip title=\"Delete all messages\">\n                        <IconButton onClick={this.onMessagesDelete} aria-label=\"Delete\">\n                          <DeleteSweepIcon fontSize=\"small\" color=\"secondary\"></DeleteSweepIcon>\n                        </IconButton>\n                      </Tooltip>\n                    </div>\n                  )}\n\n                </Typography>\n\n                <Messages messages={this.state.messages} />\n                <div style={{ float: \"left\", clear: \"both\" }} id=\"dummy\">\n\n                </div>\n\n              </div>\n            </div>\n          </div>\n          <Alert nature={state.alertNature} handleAlertClose={this.handleAlertClose} open={state.alertOpen} content={state.alertContent} />\n\n        </MuiThemeProvider>\n\n\n      );\n    }\n  }\n)\n\n\n\n\n\n\n\n\n // componentDidMount() {\n\n    //   // if (process.env.NODE_ENV === 'development') {\n    //   //   this.addDummyDataForDevelopment();\n    //   // }\n\n    // }\n\n    // addDummyDataForDevelopment = () => {\n\n    //   this.addMessage('yoyo', \"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\", true);\n    //   // this.registerEvent('welcome')\n    //   // this.registerEvent('welcome2')\n    //   this.addMessage('welcome', 'heyyyy', false);\n\n    //   // this.registerEvent('welcome')\n\n    // }","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CastConnectedIcon from '@material-ui/icons/CastConnected';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Loader from './Loader'\r\n\r\n\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\n\r\nconst styles = theme => (\r\n    {\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n\r\n        search: {\r\n            position: 'relative',\r\n            borderRadius: theme.shape.borderRadius,\r\n            backgroundColor: fade(theme.palette.common.white, 0.15),\r\n            '&:hover': {\r\n                backgroundColor: fade(theme.palette.common.white, 0.25),\r\n            },\r\n            marginRight: theme.spacing.unit * 2,\r\n            marginLeft: 0,\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: theme.spacing.unit * 3,\r\n                width: 'auto',\r\n            },\r\n        },\r\n        searchIcon: {\r\n            width: theme.spacing.unit * 9,\r\n            height: '100%',\r\n            position: 'absolute',\r\n            pointerEvents: 'none',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        inputRoot: {\r\n            color: 'inherit',\r\n            width: '100%',\r\n        },\r\n        inputInput: {\r\n\r\n\r\n            paddingTop: theme.spacing.unit,\r\n            paddingRight: theme.spacing.unit,\r\n            paddingBottom: theme.spacing.unit,\r\n            paddingLeft: theme.spacing.unit * 10,\r\n            transition: theme.transitions.create('width'),\r\n            width: '100%',\r\n            [theme.breakpoints.up('md')]: {\r\n                width: 200,\r\n            },\r\n        },\r\n    }\r\n);\r\n\r\nclass Header extends React.Component {\r\n\r\n    state = {\r\n        address: \"localhost:3001\"\r\n    }\r\n\r\n    onChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        switch (this.props.connectionStatus) {\r\n            case 'connected':\r\n            case 'reconnecting':\r\n            case 'connecting':\r\n                this.onDisconnectSubmit();\r\n\r\n                break;\r\n            case 'disconnected':\r\n                this.onConnectSubmit();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    onConnectSubmit = (e) => {\r\n        // e.preventDefault();\r\n        // alert(this.state.address)\r\n        this.props.onConnectSubmit(this.state.address);\r\n    }\r\n\r\n    onDisconnectSubmit = (e) => {\r\n        // e.preventDefault();\r\n        // alert(this.state.address)\r\n        this.props.onDisconnectSubmit();\r\n    }\r\n\r\n    renderButton = () => {\r\n        switch (this.props.connectionStatus) {\r\n            case 'connected':\r\n                return <Button type=\"submit\" color=\"inherit\">Disconnect</Button>;\r\n            case 'reconnecting':\r\n            case 'connecting':\r\n                return <Button type=\"submit\" color=\"inherit\">Cancel</Button>;\r\n            case 'disconnected':\r\n                return <Button type=\"submit\" color=\"inherit\">Connect</Button>;\r\n            // case 'connecting':\r\n            //     return <Typography color=\"inherit\" variant=\"subtitle1\" >Connecting...</Typography>;\r\n            // default:\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderStatus = () => {\r\n        switch (this.props.connectionStatus) {\r\n\r\n            case 'reconnecting':\r\n            case 'connecting':\r\n                return <Loader></Loader>;\r\n            case 'disconnected':\r\n                return <SearchIcon></SearchIcon>;\r\n            case 'connected':\r\n               return <CastConnectedIcon></CastConnectedIcon>;\r\n            default:\r\n                return '';\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <form autoComplete=\"off\" onSubmit={this.onSubmit} className={classes.root}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n\r\n                        <div className={classes.search}>\r\n                            <div className={classes.searchIcon}>\r\n                                {this.renderStatus()}\r\n\r\n                            </div>\r\n                            <InputBase\r\n                                name=\"address\"\r\n                                value={this.state.address}\r\n                                onChange={this.onChange}\r\n                                placeholder=\"localhost:3001\"\r\n                                classes={{\r\n                                    root: classes.inputRoot,\r\n                                    input: classes.inputInput,\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        {this.renderButton()}\r\n\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </form>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default withStyles(styles)(Header);","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class AddEvent extends React.Component {\r\n    state = {\r\n        event: \"\"\r\n    }\r\n\r\n    onChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        // alert(this.state.address)\r\n        this.props.onSubmit(this.state.event);\r\n    }\r\n\r\n    // render() {\r\n    //     return (\r\n    //         <form onSubmit={this.onSubmit} className=\"form-inline\">\r\n\r\n    //             <div className=\"form-group mx-sm-3 mb-2\">\r\n\r\n    //                 <input onChange={this.onChange} value={this.state.event} type=\"text\" className=\"form-control\" id=\"event\" name=\"event\" placeholder=\"Event name\" />\r\n    //             </div>\r\n    //             <button type=\"submit\" className=\"btn btn-primary mb-2\">Register event</button>\r\n    //         </form>\r\n\r\n    //     )\r\n    // }\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmit} >\r\n                    \r\n                <TextField                  \r\n                    label=\"Event name\"\r\n                    required               \r\n                    onChange={this.onChange} value={this.state.event} \r\n                    type=\"text\"\r\n                    fullWidth\r\n                    name=\"event\"                \r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                />\r\n                <Button disabled={!this.props.connected} type=\"submit\" variant=\"contained\" color=\"primary\" >\r\n                    Register\r\n                </Button>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}